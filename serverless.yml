# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x

  stage: BrevilleAE
  region: us-east-2
  role: arn:aws:iam::300390189873:role/ServerlessTestRole

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  ServerlessDemo:
    handler: handler.FirstServerlessDemollo
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
          path: users/create
          method: get
          integration: http
          cors: false
          request:
            uri: 'https://sb2admin.breville.ae'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Strict-Transport-Security: "'max-age=31536000'"
                Access-Control-Expose-Headers: "'cLocation'"
                Access-Control-Allow-Origin: "'Original Url'"
                cLocation: integration.response.header.Location
      - http:
          path: /cart
          method: get
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
      - http:
          path: /cart/add
          method: POST
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart/add'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
              500:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
      - http:
          path: /cart/count-items
          method: get
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart/count-items'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
              500:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
      - http:
          path: /cart/delete-item
          method: delete
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart/delete-item'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
              500:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
      - http:
          path: /cart/totals
          method: get
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart/totals'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
              500:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
      - http:
          path: /cart/update-item
          method: post
          integration: http
          cors: true
          request:
            uri: 'https://sandbox1.breville.ae/wp-json/wc/v2/cart/cart-item'
            passThrough: NEVER
            template:
              application/json: '{}'
          response:
            statusCodes:
              200:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
              500:
                pattern: ''
                Access-Control-Allow-Origin: "'https://breville-env.qa.breville.com''"
                Access-Control-Allow-Credentials: "'true'"
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

# donot continue if there are any errors
configValidationMode: error
